import java.util.*;
  
public class Creator
{
    public static void main(String[] args)
    {
		Scanner sc=new Scanner(System.in); 
	System.out.println("Enter your choice of creating");
	System.out.println("1.Create Password");
	System.out.println("2.Create OTP");
	int choice=sc.nextInt(); 
	if(choice==1){

		System.out.println("enter the Length of Password to be created");
		int length=sc.nextInt();
	 
	System.out.println(geek_Password(length));
    }
	else if(choice==2)
	{
	System.out.println("enter the length of OTP to be generated");
	int len=sc.nextInt();
	System.out.println(OTP(len);
	}
	}
	static char[] geek_Password(int length)
    {
        System.out.println("Generating password using random() : ");
        System.out.print("Your new password is : ");
  
        // A strong password has Cap_chars, Lower_chars,
        // numeric value and symbols. So we are using all of
        // them to generate our password
        String Capital_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        String Small_chars = "abcdefghijklmnopqrstuvwxyz";
        String numbers = "0123456789";
                String symbols = "!@#$%^&*_=+-/.?<>)";
  
  
        String values = Capital_chars + Small_chars +
                        numbers + symbols;
  
        // Using random method
        Random rndm_method = new Random();
  
        char[] password = new char[length];
  
        for (int i = 0; i < length; i++)
        {
            // Use of charAt() method : to get character value
            // Use of nextInt() as it is scanning the value as int
            password[i] =
              values.charAt(rndm_method.nextInt(values.length()));
  
        }
        return password;
    }

static char[] OTP(int len)
    {
        System.out.println("Generating OTP using random() : ");
        System.out.print("You OTP is : ");
  
        // Using numeric values
        String numbers = "0123456789";
  
        // Using random method
        Random rndm_method = new Random();
  
        char[] otp = new char[len];
  
        for (int i = 0; i < len; i++)
        {
            // Use of charAt() method : to get character value
            // Use of nextInt() as it is scanning the value as int
            otp[i] =
             numbers.charAt(rndm_method.nextInt(numbers.length()));
        }
        return otp;
    }
	}